{"version":3,"sources":["containers/Card.js","containers/CardList.js","containers/SearchBox.js","containers/Scroll.js","components/ErrorBoundry.js","components/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","Fragment","map","user","i","containers_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","ScrollBehavior","props","style","overflowY","border","height","children","ErrorBoundry","_this","Object","classCallCheck","this","_super","call","state","hasError","error","info","setState","hasErro","Component","App","onSearchChange","event","target","value","_this2","fetch","then","response","json","users","_this3","filteredRobots","filter","robot","toLowerCase","includes","length","containers_SearchBox","Scroll","components_ErrorBoundry","containers_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1c81f7c5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <div className=\"tc bg-light-green dib br3 pas3 ma2 grow bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n  // if (true) {\n  //   throw new Error('baaaad');\n  // }\n  return (\n    <>\n      {robots.map((user, i) => {\n        return (\n          <Card\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\n\nconst ScrollBehavior = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: 'scroll',\n        border: '1px solid black',\n        height: '500px',\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default ScrollBehavior;\n","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasErro) {\n      return <h1> Oooops. That is not good</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport CardList from '../containers/CardList';\nimport SearchBox from '../containers/SearchBox';\nimport Scroll from '../containers/Scroll';\nimport ErrorBoundry from './ErrorBoundry';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield: '',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ robots: users }));\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value });\n  };\n\n  render() {\n    const filteredRobots = this.state.robots.filter((robot) => {\n      return robot.name\n        .toLowerCase()\n        .includes(this.state.searchfield.toLowerCase());\n    });\n    if (this.state.robots.length === 0) {\n      return <h1>Loading</h1>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox searchChange={this.onSearchChange} />\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}